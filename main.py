# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import base64

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setFixedSize(612, 896)
        MainWindow.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(10, 30, 41, 16))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(60, 30, 411, 21))
        self.lineEdit.setMaxLength(4000)
        self.lineEdit.setObjectName("lineEdit")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(490, 30, 61, 23))
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.loja)
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(10, 70, 151, 16))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(170, 70, 301, 20))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(490, 70, 61, 23))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.clicked.connect(self.clear_lineedit) 
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(10, 120, 591, 711))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        self.tableWidget.setFont(font)
        self.tableWidget.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.tableWidget.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(5)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        self.tableWidget.setColumnWidth(0,60)
        self.tableWidget.setColumnWidth(1,40)
        self.tableWidget.setColumnWidth(2,100)
        self.tableWidget.setColumnWidth(3,80)
        self.tableWidget.setColumnWidth(4,400)
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(240, 850, 91, 23))
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_3.clicked.connect(self.limpar_tabela) 
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(360, 850, 141, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(5)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Resume 1.0"))
        self.label.setText(_translate("MainWindow", "Link:"))
        self.lineEdit.setPlaceholderText(_translate("MainWindow", "Cole o link aqui"))
        self.pushButton.setText(_translate("MainWindow", "Atualizar"))
        self.label_2.setText(_translate("MainWindow", "Numero de produtos:"))
        self.pushButton_2.setText(_translate("MainWindow", "Limpar"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Loja"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Pagina"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Produtos/offset"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Q. Carracters"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Link"))
        self.pushButton_3.setText(_translate("MainWindow", "Limpar Tabela"))
        self.label_3.setText(_translate("MainWindow", "By. Leonardo D.SS"))
## Meu Codigo#
    def clear_lineedit(self):
        self.lineEdit.setText("")
        self.lineEdit_2.setText("")

    def loja(self):
        link=self.lineEdit.text()
        print(len(link))
        if link[:42]=="https://catalogo-bff-v2-americanas.b2w.io/":
            #print("Americanas")
            produtos=self.lineEdit_2.text()
            partoffset='22offset%22%3A'
            try:
                produtos=int(self.lineEdit_2.text())
                #print(produtos)
                divprodutos=produtos//24
                resprodutos=produtos%24
                if divprodutos==0:
                    noffset=24
                    pagina=1
               
                elif divprodutos>=1 and divprodutos<=83 and resprodutos==0 :
                    noffset=24
                    pagina=divprodutos
               
                elif divprodutos>=1 and divprodutos<=82 and resprodutos>=1 :
                    noffset=24
                    pagina=divprodutos+1
                elif divprodutos>=83:
                    noffset=24
                    pagina=83
                
                for i in range(0,(24*83)):
                    offsetindicator=str(i)
                    offset=(partoffset+offsetindicator+'%')
                    if offset in link:
                        #print(offset,"\n\n",i,'\n\n')
                        novo=partoffset+"#1%"
                        link=link.replace(offset,novo)
                        loja="Americ"
                        #pagina='' ja tem paginas
                        produtos=noffset
                        tamanho=''
                        #print(f'Offset:{noffset}\nPaginas:{pagina}\nLink:{link}')
                        #self.loadata1(noffset,pagina,novolink)
                        rowlist.append((loja,pagina,produtos,tamanho,link))
                        self.loadata()
                        
            except:
                print("Error Americanas")

######################################
        elif link[:31]=="https://m.magazineluiza.com.br/":
            #print("magalu") 
            link_mag=link
            magtag='.json?page='
            data=link_mag.find('/data/')
            link_inicio=link_mag[:data+6]+'[VARIAVEL(1)]'
            link_meio=link_mag[data+6:]
            link_fim=link_meio[link_meio.find('/'):]
            print(1)
            for i in range(1,50):
                offsetindicator=str(i)
                offset=(magtag+offsetindicator+'&')
               # print(2)
                if offset in link_fim:
                    #print("3")
                    novo=magtag+"#1&"
                    novolink=link_fim.replace(offset,novo)
                    link=link_inicio+novolink
                    #print(novolinkk)
                    
                    loja="Magalu"
                    pagina=''
                    produtos=''
                    tamanho=''
                    rowlist.append((loja,pagina,produtos,tamanho,link))
                    self.loadata()
#########################################
        elif "%22%7D" in link:
            print("Base64")
            InicioEditavel=link.find("ey")
            Link_parte1=link[:InicioEditavel]
            try:
                Editavel=(link[InicioEditavel:]).replace('%22%7D','')
                while True:
                    if '%3D%3D%3D' in Editavel:
                        Editavel=Editavel.replace("%3D%3D%3D","===")
                        
                        break
                    if '%3D%3D%' in Editavel:
                        Editavel=Editavel.replace("%3D%3D","==")
                        
                        break
                    if '%3D' in Editavel:
                        Editavel=Editavel.replace("%3D","=")
 
                        break
                    else:
                        break
                print(Editavel)
                #Decode
                Decode_editavel=(base64.b64decode(Editavel.encode())).decode()
                #print(Decode_editavel)
                Decode_editavel=Decode_editavel.replace(',"installmentCriteria":"MAX_WITHOUT_INTEREST"','')
                Decode_editavel=Decode_editavel.replace(',"orderBy":"OrderByScoreDESC"','')
                Decode_editavel=(Decode_editavel[:Decode_editavel.find('}],')+2])+'}'
                #print(Decode_editavel)
                encode_inicio=Decode_editavel[:Decode_editavel.find('"from":')+7]
                #print(encode_inicio)
                encode_fim=Decode_editavel[Decode_editavel.find(',"selectedFacets'):]
                for i in range(0,50): #preciso colocar o numero de produto para calcular o numero de paginas aqui e definir o range
                    pt1=(0+(50*i))
                    pt2=(49+(50*i))
                    New_decode=str(encode_inicio+(str(pt1))+',"to":'+(str(pt2))+encode_fim)
                    Tam_new=len(New_decode)%4
                    print(Tam_new)
                
                    #fazer encode
                    New_encode=base64.b64encode(New_decode.encode('ascii'))
                    New_encode=New_encode.decode()
                    ultimastr=len(New_encode)
                
                    while True:

                        if New_encode[ultimastr-1:]=='=':
                            New_encode=New_encode[:ultimastr-1]
                            ultimastr=len(New_encode)
                            #print('tinha')
                        #print(new_decode,'\n')
                        if New_encode[ultimastr-1:]!='=':
                            break
                    New_link=Link_parte1+New_encode+'%22%7D'
                    print(f'\n\nPagina:{(i+1)} Produtos da pagina vai de {pt1} a {pt2}, tamanho do link: {len(New_link)}, Link a baixo:\n{New_link}') 
                    pagina=i+1
                    produtos=f' {pt1} a {pt2}'
                    tamanho=len(New_link)
                    loja="Base64"
                    rowlist.append((loja,pagina,produtos,tamanho,link))
                    self.loadata()
            except:
                print("Erro B64 ")
                #self.textBrowser_2.setText(RouboLink)  


######################################### 
        elif link[:31]=="https://www.leroymerlin.com.br/":
            print("Leroy")
            #https://www.leroymerlin.com.br/api/boitata/v1/categories/62fbe3d90f51c920ee393c00/products?perPage=36&page=2 
            link=link[:link.find('&page=')+6]+'#1'
            print(link)
            try:
                produtos=int(self.lineEdit_2.text())
                #print(produtos)
                divprodutos=produtos//36
                resprodutos=produtos%36
                if divprodutos==0:
                    pagina=1
                    print(pagina)
                
                elif divprodutos>=1 and divprodutos<=50 and resprodutos==0 :                 
                    pagina=divprodutos
                    print(pagina)
                    
                elif divprodutos>=1 and divprodutos<=50 and resprodutos>=1 :  
                    pagina=divprodutos+1
                    print(pagina)
                elif divprodutos>=50:
                    pagina=50
                    print(pagina)
                loja="Leroy"
                produtos=''
                tamanho=''
                rowlist.append((loja,pagina,produtos,tamanho,link))
                self.loadata()
            except:
                print("Erro Leroy")
  
######################################### 
#https://www.extra.com.br/api/catalogo-ssr/products?ResultsPerPage=20&PartnerKey=interno&ApiKey=extra&Filter=c1_c2_c1588&Page=4&Filtro=c1_c2_c1588&PaginaAtual=4
#https://www.casasbahia.com.br/api/catalogo-ssr/products?ResultsPerPage=20&PartnerKey=interno&ApiKey=casasbahia&Filter=c1_c2_c1588&Page=2&Filtro=c1_c2_c1588&PaginaAtual=2   
#https://www.pontofrio.com.br/api/catalogo-ssr/products?ResultsPerPage=20&PartnerKey=interno&ApiKey=casasbahia&Filter=c1_c2_c1588&Page=2&Filtro=c1_c2_c1588&PaginaAtual=2  
        elif link[:25]=="https://www.extra.com.br/":    
            print("Extra")
            link=link[:link.find('&PaginaAtual=')]

            inicio_link=link[:link.find('&Page=')+6]
            fim_link=link[len(inicio_link):]
            fim_link=fim_link[fim_link.find("&"):]
            Extra=inicio_link+'#1'+fim_link
            link=Extra
            loja="Extra"
            pagina=''
            produtos=''
            tamanho=''
            rowlist.append((loja,pagina,produtos,tamanho,link))
            self.loadata()
            PontoFrio='https://www.pontofrio.com.br/'+Extra[25:]
            link=PontoFrio
            loja="PontoF"
            rowlist.append((loja,pagina,produtos,tamanho,link))
            self.loadata()
            CasasBahia='https://www.casasbahia.com.br/'+Extra[25:]
            link=CasasBahia
            loja="CasasB"
            rowlist.append((loja,pagina,produtos,tamanho,link))
            self.loadata()

        elif link[:29]=="https://www.pontofrio.com.br/":    
            print("PtF")
            link=link[:link.find('&PaginaAtual=')]
            inicio_link=link[:link.find('&Page=')+6]
            fim_link=link[len(inicio_link):]
            fim_link=fim_link[fim_link.find("&"):]
            PontoFrio=inicio_link+'#1'+fim_link
            loja="PontoF"
            pagina=''
            produtos=''
            tamanho=''
            rowlist.append((loja,pagina,produtos,tamanho,link))
            self.loadata()
            CasasBahia='https://www.casasbahia.com.br/'+PontoFrio[29:]
            link=CasasBahia
            loja="CasasB"
            rowlist.append((loja,pagina,produtos,tamanho,link))
            self.loadata()
            Extra='https://www.extra.com.br/'+PontoFrio[29:]
            link=Extra
            loja="Extra"
            rowlist.append((loja,pagina,produtos,tamanho,link))
            self.loadata()
        elif link[:30]=="https://www.casasbahia.com.br/":    
            print("CB")
            link=link[:link.find('&PaginaAtual=')]
            inicio_link=link[:link.find('&Page=')+6]
            fim_link=link[len(inicio_link):]
            fim_link=fim_link[fim_link.find("&"):]
            CasasBahia=inicio_link+'#1'+fim_link
            loja="CasasB"
            pagina=''
            produtos=''
            tamanho=''
            rowlist.append((loja,pagina,produtos,tamanho,link))
            self.loadata()
            Extra='https://www.extra.com.br/'+CasasBahia[30:]
            link=Extra
            loja="Extra"
            rowlist.append((loja,pagina,produtos,tamanho,link))
            self.loadata()
            PontoFrio='https://www.pontofrio.com.br/'+CasasBahia[30:]
            link=PontoFrio
            loja="PontoF"
            rowlist.append((loja,pagina,produtos,tamanho,link))
            self.loadata()
         
#########################################                
    def loadata(self):
        
        for row , r in enumerate (rowlist):
            
            loja,pagina,produtos,tamanho,link=r
            self.tableWidget.setRowCount(len(rowlist))
            self.tableWidget.setItem(row,0,QtWidgets.QTableWidgetItem(f'{loja}'))
            self.tableWidget.setItem(row,1,QtWidgets.QTableWidgetItem(f'{pagina}'))#paginas
            self.tableWidget.setItem(row,2,QtWidgets.QTableWidgetItem(f'{produtos}'))
            self.tableWidget.setItem(row,3,QtWidgets.QTableWidgetItem(f'{tamanho}'))
            self.tableWidget.setItem(row,4,QtWidgets.QTableWidgetItem(f'{link}'))
    def limpar_tabela(self):
        self.tableWidget.clearContents()
        rowlist.clear()
        
#Americanas,magalu,b64,leroy,pontofrio,extra,casasbahia        
        
if __name__ == "__main__":
    import sys
    rowlist=[]
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
